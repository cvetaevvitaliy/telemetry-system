name: CI

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

on: [push]

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-18.04
    steps:
    - uses: FranzDiebold/github-env-vars-action@v2
    - name: Print environment variables
      run: |
        echo "CI_REPOSITORY_SLUG=$CI_REPOSITORY_SLUG"
        echo "CI_REPOSITORY_OWNER=$CI_REPOSITORY_OWNER"
        echo "CI_REPOSITORY_OWNER_SLUG=$CI_REPOSITORY_OWNER_SLUG"
        echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME"
        echo "CI_REPOSITORY_NAME_SLUG=$CI_REPOSITORY_NAME_SLUG"
        echo "CI_REPOSITORY=$CI_REPOSITORY"
        echo "CI_REF_SLUG=$CI_REF_SLUG"
        echo "CI_ACTION_REF_NAME=$CI_ACTION_REF_NAME"
        echo "CI_ACTION_REF_NAME_SLUG=$CI_ACTION_REF_NAME_SLUG"
        echo "CI_REF_NAME=$CI_REF_NAME"
        echo "CI_REF_NAME_SLUG=$CI_REF_NAME_SLUG"
        echo "CI_REF=$CI_REF"
        echo "CI_HEAD_REF_SLUG=$CI_HEAD_REF_SLUG"
        echo "CI_HEAD_REF=$CI_HEAD_REF"
        echo "CI_BASE_REF_SLUG=$CI_BASE_REF_SLUG"
        echo "CI_BASE_REF=$CI_BASE_REF"
        echo "CI_SHA_SHORT=$CI_SHA_SHORT"
        echo "CI_SHA=$CI_SHA"
        echo "CI_ACTOR=$CI_ACTOR"
        echo "CI_EVENT_NAME=$CI_EVENT_NAME"
        echo "CI_RUN_ID=$CI_RUN_ID"
        echo "CI_RUN_NUMBER=$CI_RUN_NUMBER"
        echo "CI_WORKFLOW=$CI_WORKFLOW"
        echo "CI_ACTION=$CI_ACTION"
          
          
    - name: Check folder 
#      working-directory: ${{runner.workspace}}/telemetry-system
      run: ls -l
      
    - name: Install 
      run: npm install git
#     - name: Download arm-none-eabi-gcc
#       uses: fiam/arm-none-eabi-gcc@v1
#       with:
#          release: '9-2019-q4' # The arm-none-eabi-gcc release to use.
#     - run: arm-none-eabi-gcc --version
#     - run: which arm-none-eabi-gcc
      
    - name: Create Build folder
      run: cmake -E make_directory ${{runner.workspace}}/telemetry-system/build
      
    - name: Cmake ..
      working-directory: ${{runner.workspace}}/telemetry-system/build
      shell: bash
      run: cmake ..
      
#     - name: Cmake ..
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       run: cmake ${{runner.workspace}}/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      
#     - name: Configure CMake
#       shell: bash
#       working-directory: ${{runner.workspace}}/build
#       run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      
#     - name: Build
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       run: cmake --build . --config $BUILD_TYPE
      
#   test: # make sure the action works on a clean machine without building
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
#     name: Test @ ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     steps:
#     - uses: actions/checkout@v2
#     - uses: ./
#       with: 
#         release: 9-2020-q2
#     - run: arm-none-eabi-gcc -v
