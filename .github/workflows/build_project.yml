name: CI

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

on: [push]

jobs:
  build: # make sure build/ci work properly
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
#    runs-on: ubuntu-18.04
    steps:
          
    - uses: actions/checkout@v2
      
    - name: Install git
      run: npm install git
      
    - name: Download arm-none-eabi-gcc
      uses: fiam/arm-none-eabi-gcc@v1
      with:
         release: '7-2018-q2'
      
    - name: Create Build folder
      run: cmake -E make_directory ${{runner.workspace}}/telemetry-system/build
      
    - name: Configure CMake project
      working-directory: ${{runner.workspace}}/telemetry-system/build
      shell: bash
      run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
      
    - name: Build project 
      working-directory: ${{runner.workspace}}/telemetry-system/build
      shell: bash
      run: make 
      
#     - name: Cmake ..
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       run: cmake ${{runner.workspace}}/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      
#     - name: Configure CMake
#       shell: bash
#       working-directory: ${{runner.workspace}}/build
#       run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      
#     - name: Build
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       run: cmake --build . --config $BUILD_TYPE
      
#   test: # make sure the action works on a clean machine without building
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
#     name: Test @ ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     steps:
#     - uses: actions/checkout@v2
#     - uses: ./
#       with: 
#         release: 9-2020-q2
#     - run: arm-none-eabi-gcc -v
